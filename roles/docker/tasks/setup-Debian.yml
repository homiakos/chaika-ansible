---
  - name: Ensure old versions of Docker are not installed.
    package:
      name:
        - docker
        - docker-engine
      state: absent
    tags:
        - docker
  
  - name: Ensure dependencies are installed.
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - python3-pip
      update_cache: yes
      state: present
    tags:
        - docker
  
  - name: Ensure additional dependencies are installed (on Ubuntu < 20.04 and any other systems).
    apt:
      name: gnupg2
      state: present
    when: ansible_distribution != 'Ubuntu' or ansible_distribution_version is version('20.04', '<')
    tags:
      - docker
  
  - name: Ensure additional dependencies are installed (on Ubuntu >= 20.04).
    apt:
      name: gnupg
      state: present
    when: ansible_distribution == 'Ubuntu' or ansible_distribution_version is version('20.04', '>=')
    tags:
      - docker
  
  - name: Add Docker apt key.
    apt_key:
      url: "{{ docker_apt_gpg_key }}"
      id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
      state: present
    register: add_repository_key
    ignore_errors: "{{ docker_apt_ignore_key_error }}"
    tags:
      - docker
  
  - name: Ensure curl is present (on older systems without SNI).
    package: name=curl state=present
    when: add_repository_key is failed
    tags:
      - docker
  
  - name: Add Docker apt key (alternative for older systems without SNI).
    shell: >
      curl -sSL {{ docker_apt_gpg_key }} | sudo apt-key add -
    args:
      warn: false
    when: add_repository_key is failed
    tags:
      - docker
  
  - name: Add Docker repository.
    apt_repository:
      repo: "{{ docker_apt_repository }}"
      state: present
      update_cache: true
    tags:
        - docker

  - name: Install Docker.
    package:
      name: "{{ docker_package }}"
      state: "{{ docker_package_state }}"
    notify: Restart Docker
    ignore_errors: "{{ ansible_check_mode }}"
    tags:
      - docker

  - name: "Install packet executable pip"
    pip:
        name: '{{ item }}'
    loop:
        - docker-compose
#        - docker-py
        - docker-pretty-ps
    tags:
        - docker

  - name: Ensure Docker is started and enabled at boot.
    service:
      name: docker
      state: "{{ docker_service_state }}"
      enabled: "{{ docker_service_enabled }}"
    ignore_errors: "{{ ansible_check_mode }}"
    tags:
      - docker

  - meta: flush_handlers